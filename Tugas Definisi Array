1. toString

Method toString() mengembalikan sebuah string berdasarkan objek spesifik.

        //SintaksBagian
        str.toString()

        //Penggunaan toString()Bagian
        Pada contoh menampilkan nilai string dari sebuah objek String:

        var x = new String('Halo Dunia');
        console.log(x.toString()); // logs 'Halo Dunia'

2. join 

Method join() menggabungkan semua elemen dari array menjadi sebuah string. Alogaritma method ini memiliki kesamaan dengan Array.prototype.join(). TypedArray di sini merupakan salah datu typed array types.

        //SintaksBagian
        typedarray.join([separator = ',']);
        //ParameterBagian
        separator
        Opsional. Menentukan sebuah string untuk memisahkan setiap elemen. Separator perlu di konversi ke string jika dianggap penting. Jika dikosongkan, elemen array akan dipisahkan dengan tanda koma (",").

        //ContohBagian
        var uint8 = new Uint8Array([1,2,3]);
        uint8.join();      // '1,2,3'
        uint8.join(' / '); // '1 / 2 / 3'
        uint8.join('');    // '123'

3. push

cara yang bisa dilakukan untuk menambah data ke dalam array:

-Mengisi menggunakan indeks;
-Mengisi menggunakan method push().

        // membuat array
        var products = ["Senter", "Radio", "Antena", "Obeng"];

        // menambahkan tv ke dalam array products
        products.push("Televisi");

        // menapilkan isi array
        document.write(products);

Kita juga bisa menambahkan beberapa data sekaligus dengan cara seperti ini:

        //products.push("Alarm", "Gemobok", "Paku");

4. pop

Sama seperti menambahkan data ke array, menghapus data juga memiliki dua cara:

-Menggunakan delete;
-Menggunakan method pop().

Kita dapat menghapus data dengan nomer indeks tertentu dengan delete. Sedangkan pop() akan menghapus dari belakang.
Kekurangan dari delete, ia akan menciptakan ruang kosong di dalam array.

        //SyntaksBagian
        arr.pop()

        //ContohBagian
Menghapus elemen terakhir pada arrayBagian
Kode berikut membuat array myFish yang memiliki empat elemen, kemudian menghapus elemen teakhirnya.

        var myFish = ['angel', 'clown', 'mandarin', 'sturgeon'];
        console.log(myFish); // ['angel', 'clown', 'mandarin', 'sturgeon']
        var popped = myFish.pop();
        console.log(myFish); // ['angel', 'clown', 'mandarin' ] 
        console.log(popped); // 'sturgeon'

5. unshift

Method unshift() menambahkan satu atau lebih elemen ke indek awal array dan mengembalikan jumlah index array yang baru.

        //SintaksBagian
        arr.unshift([element1[, ...[, elementN]]])
        //ParameterBagian
        elementN
        Elemen yang akan di tambahkan di awal array.
        //ReturnsBagian
        Properti length baru dari objek teratas dimana method di panggil.

6. shift

menghapus data dari depan dengan menggunakan method shift().
        //
        var bunga = ["Mawar", "Melati", "Anggrek", "Sakura"];

        // hapus data dari depan
        bunga.shift();

7. splice

menghapus data pada inteks tertentu, maka fungsi atau method yang digunakan adalah splice().
Fungsi ini memiliki dua parameter yang harus diberikan:

        array.splice(<indeks>, <total>);
Keterangan:

<indeks> adalah indeks dari data di dalam array yang akan dihapus;
<total> adalah jumlah data yang akan dihapus dari indeks tersebut.
Biasanya kita berikan nilai total dengan nilai 1 agar hanya menghapus satu data saja.

Contoh:

        //var bunga = ["Mawar", "Melati", "Anggrek", "Sakura"];
        // hapus Anggrek
        bunga.splice(2, 1);

8. concat

Method concat() menggabungkan dua teks atau lebih menjadi sebuah string baru.

        //SyntaxBagian
        str.concat(string2, string3[, ..., stringN])
        //ParameterBagian
        string2...stringN
        String untuk menggabungkan string.

        //ContohBagian
Penggunaan concat()Bagian
Untuk menggabungkan string menjadi sebuah string baru seperti pada contoh dibawah.

        var halo = 'Halo, ';
        console.log(halo.concat('Didik', ' semoga hari ini menyenangkan.'));

/* Halo, Didik semoga hari ini menyenangkan. */

9. slice

Method Array.slice() digunakan untuk ’memotong’ array menjadi array baru, atau menjadi ’sub-array’ dari array asal. Method slice() ini membutuhkan 2 buah argumen yang berisi posisi index awal dan akhir pemotongan.

        SyntaxSection
        arr.slice([begin[, end]])

        <script>
        var arr1 = [1,2,3,4,"a","b","c","d"];
        
        //slice dari index ke 2 sampai 4
        var arr2 = arr1.slice(2,4)
        console.log(arr2.toString());         //hasil: 3,4
        
        //slice dari index ke 4 sampai akhir array
        var arr3 = arr1.slice(4)
        console.log(arr3.toString());         //hasil: a,b,c,d
        
        //slice dari index ke 2 dari akhir array
        var arr4 = arr1.slice(-2)
        console.log(arr4.toString());         //hasil: c,d
        
        //slice dari index ke 5 dari akhir array sampai
        //index ke 2 dari akhir array
        var arr5 = arr1.slice(-5,-2)
        console.log(arr5.toString());         //hasil: 4,a,b
        </script>

Dari contoh kode yang kita lakukan, terlihat bahwa index terakhir tidak termasuk ke dalam array baru. arr1.slice(2,4) akan mengembalikan elemen array dari index ke-2, ke-3, namun tidak ke-4.

10. map

Metode map () membuat array baru dengan hasil memanggil fungsi yang disediakan pada setiap elemen dalam array panggilan.

        SyntaxSection
        var new_array = arr.map(function callback(currentValue[, index[, array]]) {
            // Return element for new_array
        }[, thisArg])

contoh:
        var numbers = [1, 4, 9];
        var roots = numbers.map(function(num) {
        return Math.sqrt(num)
        });
        // roots is now [1, 2, 3]
        // numbers is still [1, 4, 9]